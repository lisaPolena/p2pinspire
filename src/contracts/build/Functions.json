{
  "contractName": "Functions",
  "abi": [
    {
      "inputs": [],
      "name": "generateId",
      "outputs": [
        {
          "internalType": "bytes16",
          "name": "",
          "type": "bytes16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"generateId\",\"outputs\":[{\"internalType\":\"bytes16\",\"name\":\"\",\"type\":\"bytes16\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"generateId()\":{\"details\":\"Generate a unique ID for a board\",\"returns\":{\"_0\":\"Unique bytes16 ID Note: This implementation uses a hash of the sender's address, current block timestamp, and previous block's random number as the ID\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/src/contracts/common/functions.sol\":\"Functions\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/src/contracts/common/functions.sol\":{\"keccak256\":\"0x46caac17156840bdaa839d564068df0ef96505185afd81f5c42f306c3730f5fb\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://32e4375a6d28902098ba9123d6357e2dfbba306739c80551c50af6224143bd4f\",\"dweb:/ipfs/QmP1reLvL2i6Mwvouczo3ZPq1UuM5QU35kxwBcyELXLrrt\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506101f9806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80636f8dcb3d14610030575b600080fd5b61003861004e565b60405161004591906100c6565b60405180910390f35b60008033424460405160200161006693929190610186565b6040516020818303038152906040528051906020012090506000819050809250505090565b60007fffffffffffffffffffffffffffffffff0000000000000000000000000000000082169050919050565b6100c08161008b565b82525050565b60006020820190506100db60008301846100b7565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061010c826100e1565b9050919050565b60008160601b9050919050565b600061012b82610113565b9050919050565b600061013d82610120565b9050919050565b61015561015082610101565b610132565b82525050565b6000819050919050565b6000819050919050565b61018061017b8261015b565b610165565b82525050565b60006101928286610144565b6014820191506101a2828561016f565b6020820191506101b2828461016f565b60208201915081905094935050505056fea2646970667358221220b181367084fa327f6bf46d5a927842d5b22634f66e1f2e470e985f96dbcec30c64736f6c634300080d0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061002b5760003560e01c80636f8dcb3d14610030575b600080fd5b61003861004e565b60405161004591906100c6565b60405180910390f35b60008033424460405160200161006693929190610186565b6040516020818303038152906040528051906020012090506000819050809250505090565b60007fffffffffffffffffffffffffffffffff0000000000000000000000000000000082169050919050565b6100c08161008b565b82525050565b60006020820190506100db60008301846100b7565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061010c826100e1565b9050919050565b60008160601b9050919050565b600061012b82610113565b9050919050565b600061013d82610120565b9050919050565b61015561015082610101565b610132565b82525050565b6000819050919050565b6000819050919050565b61018061017b8261015b565b610165565b82525050565b60006101928286610144565b6014820191506101a2828561016f565b6020820191506101b2828461016f565b60208201915081905094935050505056fea2646970667358221220b181367084fa327f6bf46d5a927842d5b22634f66e1f2e470e985f96dbcec30c64736f6c634300080d0033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:2090:5",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "52:105:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "62:89:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "77:5:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "84:66:5",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffff00000000000000000000000000000000"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "73:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "73:78:5"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "62:7:5"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bytes16",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "34:5:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "44:7:5",
                "type": ""
              }
            ],
            "src": "7:150:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "228:53:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "245:3:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "268:5:5"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_bytes16",
                          "nodeType": "YulIdentifier",
                          "src": "250:17:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "250:24:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "238:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "238:37:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "238:37:5"
                }
              ]
            },
            "name": "abi_encode_t_bytes16_to_t_bytes16_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "216:5:5",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "223:3:5",
                "type": ""
              }
            ],
            "src": "163:118:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "385:124:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "395:26:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "407:9:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "418:2:5",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "403:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "403:18:5"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "395:4:5"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "475:6:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "488:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "499:1:5",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "484:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "484:17:5"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bytes16_to_t_bytes16_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "431:43:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "431:71:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "431:71:5"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes16__to_t_bytes16__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "357:9:5",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "369:6:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "380:4:5",
                "type": ""
              }
            ],
            "src": "287:222:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "560:81:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "570:65:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "585:5:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "592:42:5",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "581:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "581:54:5"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "570:7:5"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "542:5:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "552:7:5",
                "type": ""
              }
            ],
            "src": "515:126:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "692:51:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "702:35:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "731:5:5"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "713:17:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "713:24:5"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "702:7:5"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "674:5:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "684:7:5",
                "type": ""
              }
            ],
            "src": "647:96:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "791:52:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "801:35:5",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "826:2:5",
                        "type": "",
                        "value": "96"
                      },
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "830:5:5"
                      }
                    ],
                    "functionName": {
                      "name": "shl",
                      "nodeType": "YulIdentifier",
                      "src": "822:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "822:14:5"
                  },
                  "variableNames": [
                    {
                      "name": "newValue",
                      "nodeType": "YulIdentifier",
                      "src": "801:8:5"
                    }
                  ]
                }
              ]
            },
            "name": "shift_left_96",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "772:5:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "newValue",
                "nodeType": "YulTypedName",
                "src": "782:8:5",
                "type": ""
              }
            ],
            "src": "749:94:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "896:47:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "906:31:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "931:5:5"
                      }
                    ],
                    "functionName": {
                      "name": "shift_left_96",
                      "nodeType": "YulIdentifier",
                      "src": "917:13:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "917:20:5"
                  },
                  "variableNames": [
                    {
                      "name": "aligned",
                      "nodeType": "YulIdentifier",
                      "src": "906:7:5"
                    }
                  ]
                }
              ]
            },
            "name": "leftAlign_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "878:5:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "aligned",
                "nodeType": "YulTypedName",
                "src": "888:7:5",
                "type": ""
              }
            ],
            "src": "849:94:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "996:53:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1006:37:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1037:5:5"
                      }
                    ],
                    "functionName": {
                      "name": "leftAlign_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "1017:19:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1017:26:5"
                  },
                  "variableNames": [
                    {
                      "name": "aligned",
                      "nodeType": "YulIdentifier",
                      "src": "1006:7:5"
                    }
                  ]
                }
              ]
            },
            "name": "leftAlign_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "978:5:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "aligned",
                "nodeType": "YulTypedName",
                "src": "988:7:5",
                "type": ""
              }
            ],
            "src": "949:100:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1138:74:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1155:3:5"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1198:5:5"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "1180:17:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1180:24:5"
                          }
                        ],
                        "functionName": {
                          "name": "leftAlign_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1160:19:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1160:45:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1148:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1148:58:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1148:58:5"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1126:5:5",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1133:3:5",
                "type": ""
              }
            ],
            "src": "1055:157:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1263:32:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1273:16:5",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1284:5:5"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1273:7:5"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1245:5:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1255:7:5",
                "type": ""
              }
            ],
            "src": "1218:77:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1348:32:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1358:16:5",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1369:5:5"
                  },
                  "variableNames": [
                    {
                      "name": "aligned",
                      "nodeType": "YulIdentifier",
                      "src": "1358:7:5"
                    }
                  ]
                }
              ]
            },
            "name": "leftAlign_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1330:5:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "aligned",
                "nodeType": "YulTypedName",
                "src": "1340:7:5",
                "type": ""
              }
            ],
            "src": "1301:79:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1469:74:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1486:3:5"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1529:5:5"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "1511:17:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1511:24:5"
                          }
                        ],
                        "functionName": {
                          "name": "leftAlign_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "1491:19:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1491:45:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1479:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1479:58:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1479:58:5"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1457:5:5",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1464:3:5",
                "type": ""
              }
            ],
            "src": "1386:157:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1721:366:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1794:6:5"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1803:3:5"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1732:61:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1732:75:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1732:75:5"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1816:19:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1827:3:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1832:2:5",
                        "type": "",
                        "value": "20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1823:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1823:12:5"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "1816:3:5"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "1907:6:5"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1916:3:5"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1845:61:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1845:75:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1845:75:5"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1929:19:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1940:3:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1945:2:5",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1936:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1936:12:5"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "1929:3:5"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "2020:6:5"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2029:3:5"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1958:61:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1958:75:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1958:75:5"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2042:19:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2053:3:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2058:2:5",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2049:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2049:12:5"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "2042:3:5"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2071:10:5",
                  "value": {
                    "name": "pos",
                    "nodeType": "YulIdentifier",
                    "src": "2078:3:5"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "2071:3:5"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1684:3:5",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "1690:6:5",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1698:6:5",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1706:6:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1717:3:5",
                "type": ""
              }
            ],
            "src": "1549:538:5"
          }
        ]
      },
      "contents": "{\n\n    function cleanup_t_bytes16(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffff00000000000000000000000000000000)\n    }\n\n    function abi_encode_t_bytes16_to_t_bytes16_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes16(value))\n    }\n\n    function abi_encode_tuple_t_bytes16__to_t_bytes16__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes16_to_t_bytes16_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function shift_left_96(value) -> newValue {\n        newValue :=\n\n        shl(96, value)\n\n    }\n\n    function leftAlign_t_uint160(value) -> aligned {\n        aligned := shift_left_96(value)\n    }\n\n    function leftAlign_t_address(value) -> aligned {\n        aligned := leftAlign_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_address(cleanup_t_address(value)))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function leftAlign_t_uint256(value) -> aligned {\n        aligned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_uint256(cleanup_t_uint256(value)))\n    }\n\n    function abi_encode_tuple_packed_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__nonPadded_inplace_fromStack_reversed(pos , value2, value1, value0) -> end {\n\n        abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value0,  pos)\n        pos := add(pos, 20)\n\n        abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack(value1,  pos)\n        pos := add(pos, 32)\n\n        abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack(value2,  pos)\n        pos := add(pos, 32)\n\n        end := pos\n    }\n\n}\n",
      "id": 5,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "70:532:1:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "70:532:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;329:271;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;372:7;391:12;446:10;458:15;475:16;429:63;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;406:96;;;;;;391:111;;512:10;561:4;555:10;;591:2;584:9;;;;329:271;:::o;7:150:5:-;44:7;84:66;77:5;73:78;62:89;;7:150;;;:::o;163:118::-;250:24;268:5;250:24;:::i;:::-;245:3;238:37;163:118;;:::o;287:222::-;380:4;418:2;407:9;403:18;395:26;;431:71;499:1;488:9;484:17;475:6;431:71;:::i;:::-;287:222;;;;:::o;515:126::-;552:7;592:42;585:5;581:54;570:65;;515:126;;;:::o;647:96::-;684:7;713:24;731:5;713:24;:::i;:::-;702:35;;647:96;;;:::o;749:94::-;782:8;830:5;826:2;822:14;801:35;;749:94;;;:::o;849:::-;888:7;917:20;931:5;917:20;:::i;:::-;906:31;;849:94;;;:::o;949:100::-;988:7;1017:26;1037:5;1017:26;:::i;:::-;1006:37;;949:100;;;:::o;1055:157::-;1160:45;1180:24;1198:5;1180:24;:::i;:::-;1160:45;:::i;:::-;1155:3;1148:58;1055:157;;:::o;1218:77::-;1255:7;1284:5;1273:16;;1218:77;;;:::o;1301:79::-;1340:7;1369:5;1358:16;;1301:79;;;:::o;1386:157::-;1491:45;1511:24;1529:5;1511:24;:::i;:::-;1491:45;:::i;:::-;1486:3;1479:58;1386:157;;:::o;1549:538::-;1717:3;1732:75;1803:3;1794:6;1732:75;:::i;:::-;1832:2;1827:3;1823:12;1816:19;;1845:75;1916:3;1907:6;1845:75;:::i;:::-;1945:2;1940:3;1936:12;1929:19;;1958:75;2029:3;2020:6;1958:75;:::i;:::-;2058:2;2053:3;2049:12;2042:19;;2078:3;2071:10;;1549:538;;;;;;:::o",
  "source": "// SPDX-License-Identifier: GPL-3.0\n\npragma solidity >=0.7.0 <0.9.0;\n\ncontract Functions {\n    /**\n     * @dev Generate a unique ID for a board\n     * @return Unique bytes16 ID\n     * Note: This implementation uses a hash of the sender's address, current block timestamp, and previous block's random number as the ID\n     */\n    function generateId() public view returns (bytes16) {\n        bytes32 uuid = keccak256(\n            abi.encodePacked(msg.sender, block.timestamp, block.difficulty)\n        );\n        bytes16 id;\n        assembly {\n            id := uuid\n        }\n        return id;\n    }\n}\n",
  "sourcePath": "/Users/lisapolena/Documents/Master_04/Thesis/Prototyp/betterPinterest/src/contracts/common/functions.sol",
  "ast": {
    "absolutePath": "project:/src/contracts/common/functions.sol",
    "exportedSymbols": {
      "Functions": [
        152
      ]
    },
    "id": 153,
    "license": "GPL-3.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 124,
        "literals": [
          "solidity",
          ">=",
          "0.7",
          ".0",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "37:31:1"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "Functions",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 152,
        "linearizedBaseContracts": [
          152
        ],
        "name": "Functions",
        "nameLocation": "79:9:1",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 150,
              "nodeType": "Block",
              "src": "381:219:1",
              "statements": [
                {
                  "assignments": [
                    131
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 131,
                      "mutability": "mutable",
                      "name": "uuid",
                      "nameLocation": "399:4:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 150,
                      "src": "391:12:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 130,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "391:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 143,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 135,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "446:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 136,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "446:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "expression": {
                              "id": 137,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967292,
                              "src": "458:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 138,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "458:15:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "expression": {
                              "id": 139,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967292,
                              "src": "475:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 140,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "difficulty",
                            "nodeType": "MemberAccess",
                            "src": "475:16:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 133,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967295,
                            "src": "429:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 134,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "429:16:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 141,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "429:63:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 132,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967288,
                      "src": "406:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 142,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "406:96:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "391:111:1"
                },
                {
                  "assignments": [
                    145
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 145,
                      "mutability": "mutable",
                      "name": "id",
                      "nameLocation": "520:2:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 150,
                      "src": "512:10:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes16",
                        "typeString": "bytes16"
                      },
                      "typeName": {
                        "id": 144,
                        "name": "bytes16",
                        "nodeType": "ElementaryTypeName",
                        "src": "512:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes16",
                          "typeString": "bytes16"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 146,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "512:10:1"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "541:34:1",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "555:10:1",
                        "value": {
                          "name": "uuid",
                          "nodeType": "YulIdentifier",
                          "src": "561:4:1"
                        },
                        "variableNames": [
                          {
                            "name": "id",
                            "nodeType": "YulIdentifier",
                            "src": "555:2:1"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "london",
                  "externalReferences": [
                    {
                      "declaration": 145,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "555:2:1",
                      "valueSize": 1
                    },
                    {
                      "declaration": 131,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "561:4:1",
                      "valueSize": 1
                    }
                  ],
                  "id": 147,
                  "nodeType": "InlineAssembly",
                  "src": "532:43:1"
                },
                {
                  "expression": {
                    "id": 148,
                    "name": "id",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 145,
                    "src": "591:2:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes16",
                      "typeString": "bytes16"
                    }
                  },
                  "functionReturnParameters": 129,
                  "id": 149,
                  "nodeType": "Return",
                  "src": "584:9:1"
                }
              ]
            },
            "documentation": {
              "id": 125,
              "nodeType": "StructuredDocumentation",
              "src": "95:229:1",
              "text": " @dev Generate a unique ID for a board\n @return Unique bytes16 ID\n Note: This implementation uses a hash of the sender's address, current block timestamp, and previous block's random number as the ID"
            },
            "functionSelector": "6f8dcb3d",
            "id": 151,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "generateId",
            "nameLocation": "338:10:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 126,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "348:2:1"
            },
            "returnParameters": {
              "id": 129,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 128,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 151,
                  "src": "372:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes16",
                    "typeString": "bytes16"
                  },
                  "typeName": {
                    "id": 127,
                    "name": "bytes16",
                    "nodeType": "ElementaryTypeName",
                    "src": "372:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes16",
                      "typeString": "bytes16"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "371:9:1"
            },
            "scope": 152,
            "src": "329:271:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 153,
        "src": "70:532:1",
        "usedErrors": []
      }
    ],
    "src": "37:566:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.13+commit.abaa5c0e.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.14",
  "updatedAt": "2023-05-26T10:30:27.279Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "generateId()": {
        "details": "Generate a unique ID for a board",
        "returns": {
          "_0": "Unique bytes16 ID Note: This implementation uses a hash of the sender's address, current block timestamp, and previous block's random number as the ID"
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}